type TItemOption {
  group: String!
  name: String!
  extraPrice: Float
}

enum EItemStatus {
  NEW
  SELLER
  EMPTY
}

type TItem {
  itemId: ID!
  name: String!
  image: String!
  price: Float!
  amount: Int!
  description: String
  discountPercent: Float
  requireOption: [TItemOption]
  additionalOption: [TItemOption]
  note: String
  status: [EItemStatus]
  category: String!
  createdAt: Date!
  updatedAt: Date!
}

input ItemOptionInput {
  group: String!
  name: String!
  extraPrice: Float
}

input CreateItemInput {
  name: String!
  image: String!
  price: Float!
  amount: Int!
  description: String
  discountPercent: Float
  requireOption: [ItemOptionInput]
  additionalOption: [ItemOptionInput]
  note: String
  status: [EItemStatus]
  category: String!
}

input UpdateItemInput {
  itemId: ID!
  name: String
  image: String
  price: Float
  amount: Int
  description: String
  discountPercent: Float
  requireOption: [ItemOptionInput]
  additionalOption: [ItemOptionInput]
  note: String
  status: [EItemStatus]
  category: String
}

type TItemResponse {
  offset: Int!
  limit: Int!
  total: Int!
  query: [TQueryBy]!
  records: [TItem]!
}

type Query {
  listItem(offset: Int, limit: Int, query: [QueryByInput]): TItemResponse!
  getItemById(itemId: ID!): TItem!
}

type Mutation {
  createItem(input: CreateItemInput!): TItem!
  updateItem(input: UpdateItemInput!): TItem!
  deleteItem(itemId: ID!): Boolean!
}
